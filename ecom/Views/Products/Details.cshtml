@model ecom.Models.Product

@{
    ViewData["Title"] = Model.Name;
    string[] imgArray = Model.ImagesUrl.Split(",");
    int i = 1;
}

<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.5.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>

<h1>@Model.Name</h1>

<div>
    <hr />
    <dl class="row" style="width: 50%; font-size: 13px;">
        <dd class="col-sm-6" style="text-decoration: none; color: black; font-size: 13px;">
          @{
            <a asp-action="Index" asp-route-category="@Model.Category.Name" style="color: black;">@Html.DisplayFor(model => model.Category.DisplayName)</a>  @:/ 
            <a asp-action="Index" asp-route-category="@Model.Category.Name" asp-route-subcategory="@Model.SubCategory.RouteName" style="color: black;">@Html.DisplayFor(model => model.SubCategory.Name)</a>
          }
        </dd> 
        <dd class="col-sm-6" style="text-decoration: none; text-align: right; padding-right: 0px;">
            Prodavač: <a href="" style="color: black; text-decoration: none;"><b>@Model.Writer.UserName</b></a>
        </dd>
    </dl>
    <div style="width: 100%; display: flex;">
        <div class="container" style="width: 50%; height: 400px; padding-right: 0px; padding-left: 0px;">
            @foreach(var item in imgArray)
            {
                <div class="mySlides">
                    <img class="myImg1" src="https://res.cloudinary.com/dsjavparg/image/upload/c_fill,h_450,w_800/@item" style="width: 100%; height: 300px; object-fit: cover; object-position: 50% 20%;" alt="Error displaying the image." />
                </div>
                <div id="myModal" class="modal">
                    <span class="close">&times;</span>
                    <img class="modal-content" id="img01">
                </div>
            }
            @if(imgArray.Length > 1)
            {
                <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
                <a class="next" onclick="plusSlides(1)">&#10095;</a>
                <div class="row" style="display: flex; padding-top: 5px;">
                    <div style="width: 100%; display: flex; justify-content: space-between;">
                    @foreach(var item in imgArray)
                    {
                        var wdt = 99 / imgArray.Length;
                        <div class="column" style="width: @wdt%;">
                            <img class="demo cursor" src="https://res.cloudinary.com/dsjavparg/image/upload/c_fill,h_450,w_800/@item" onclick="currentSlide(@i)" style="width: 100%; height: 80px; object-fit: cover; object-position: 50% 20%;" alt="Error displaying the image." />
                        </div>
                        i++;
                    }
                    </div>
                </div>
            }
        </div>
        <div class="container" style="width: 50%; height: 400px; font-size: 14px; display: flex;">
          <div class="col-md-6" style="padding-left: 3%;">
            <dt style="font-weight: normal;">Trenutna cijena:</dd>
            <dt>@Model.CurrentPrice</dt>
            <dt style="font-weight: normal;">Početna cijena :</dd>
            <dt>@Model.StartingPrice</dt>
          </div>
          <div class="col-md-6" style="text-align: right; padding-right:0px;">
            <dt style="font-weight: normal;">Objavljeno:</dd>
            <dt>@Model.AuctionStart</dt>
            <dt style="font-weight: normal;">Traje do:</dd>
            <dt>@Model.AuctionEnd</dt>
          </div>
        </div>
    </div>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Description)
    </dt>
    <dd class = "col-sm-10" id="mytextarea">
        @Html.DisplayFor(model => model.Description)
    </dd>
</div>
@{
<style>
#mytextarea{
    white-space: pre-line;
}
* {
  box-sizing: border-box;
}


img {
  vertical-align: middle;
}

/* Position the image container (needed to position the left and right arrows) */
.container {
  position: relative;
}

/* Hide the images by default */
.mySlides {
  display: none;
  cursor: pointer;
}

.mySlides:hover {opacity: 0.7;}

/* Add a pointer when hovering over the thumbnail images */
.cursor {
  cursor: pointer;
}

/* Next & previous buttons */
.prev,
.next {
  cursor: pointer;
  position: absolute;
  top: 40%;
  width: auto;
  padding: 16px;
  margin-top: -50px;
  color: white;
  font-weight: bold;
  font-size: 20px;
  border-radius: 0 3px 3px 0;
  user-select: none;
  -webkit-user-select: none;
}

/* Position the "next button" to the right */
.next {
  right: 0;
  border-radius: 3px 0 0 3px;
}

/* On hover, add a black background color with a little bit see-through */
.prev:hover,
.next:hover {
  background-color: rgba(0, 0, 0, 0.8);
}

/* Number text (1/3 etc) */
.numbertext {
  color: #f2f2f2;
  font-size: 12px;
  padding: 8px 12px;
  position: absolute;
  top: 0;
}

/* Container for image text */
.caption-container {
  text-align: center;
  background-color: #222;
  padding: 2px 16px;
  color: white;
}

.row:after {
  content: "";
  display: table;
  clear: both;
}

/* Six columns side by side */
.column {
  float: left;
  width: 16.66%;
}

/* Add a transparency effect for thumnbail images */
.demo {
  opacity: 0.6;
}

.active,
.demo:hover {
  opacity: 1;
}

.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  padding-top: 100px; /* Location of the box */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.9); /* Black w/ opacity */
}

/* Modal Content (Image) */
.modal-content {
  margin: auto;
  display: block;
  width: 80%;
  max-width: 700px;
}

/* Caption of Modal Image (Image Text) - Same Width as the Image */
#caption {
  margin: auto;
  display: block;
  width: 80%;
  max-width: 700px;
  text-align: center;
  color: #ccc;
  padding: 10px 0;
  height: 150px;
}

/* Add Animation - Zoom in the Modal */
.modal-content, #caption {
  animation-name: zoom;
  animation-duration: 0.6s;
}

keyframes zoom {
  from {transform:scale(0)}
  to {transform:scale(1)}
}

/* The Close Button */
.close {
  position: absolute;
  top: 15px;
  right: 35px;
  color: #f1f1f1;
  font-size: 40px;
  font-weight: bold;
  transition: 0.3s;
}

.close:hover,
.close:focus {
  color: #bbb;
  text-decoration: none;
  cursor: pointer;
}

/* 100% Image Width on Smaller Screens */
media only screen and (max-width: 700px){
  .modal-content {
    width: 100%;
  }
</style>
}
<script>
let slideIndex = 1;
showSlides(slideIndex);

function plusSlides(n) {
  showSlides(slideIndex += n);
}

function currentSlide(n) {
  showSlides(slideIndex = n);
}

function showSlides(n) {
  let i;
  let slides = document.getElementsByClassName("mySlides");
  let dots = document.getElementsByClassName("demo");
  let captionText = document.getElementById("caption");
  if (n > slides.length) {slideIndex = 1}
  if (n < 1) {slideIndex = slides.length}
  for (i = 0; i < slides.length; i++) {
    slides[i].style.display = "none";
  }
  for (i = 0; i < dots.length; i++) {
    dots[i].className = dots[i].className.replace(" active", "");
  }
  slides[slideIndex-1].style.display = "block";
  dots[slideIndex-1].className += " active";
  captionText.innerHTML = dots[slideIndex-1].alt;
}
</script>

<script>
var modal = document.getElementById("myModal");

// Get the image and insert it inside the modal - use its "alt" text as a caption
var img = document.getElementsByClassName("myImg1");
var modalImg = document.getElementById("img01");
var captionText = document.getElementById("caption");
for(i = 0; i < img.length ;i++)
{
  img[i].onclick = function(){
    modal.style.display = "block";
    modalImg.src = this.src;
    captionText.innerHTML = this.alt;
  }
}

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
  modal.style.display = "none";
}
</script>